#!/bin/bash

# This script handles starting the project container in development or production mode

# Get user input
# read is a built-in bash command that reads user input and stores it in the string(s)
# on the right.
# -p Causes it to print text before reading user input
read -p "Would you like to be in development or production mode? (prod/dev/dev-client) " MODE

MODE="${MODE:-"dev-client"}" # The default mode if nothing is added

echo "$MODE"

source $DOCKER_APP_PATH/server/.python-venv/bin/activate

# Convert all uppercase characters to lower case
if [ "${MODE@L}" == "dev" ]; then
    echo "Setting up the client and server in development mode"
    
    # Start client
    cd $DOCKER_APP_PATH/client
    # Automatically rebuilds client when changes are made
    # Only shows errors, and doesn't minify the code as we would like to be able to read it at this point
    npx vite build --watch --minify false --logLevel "error" &

    # Kills the Vite server after the script exits
    trap "pkill -P $$" EXIT

    echo "Wait a little bit for the client to rebuild before opening the webpage. Else you'll get 404s"
    # Vite takes a bit to build the client
    sleep 8

    # Start server
    cd $DOCKER_APP_PATH/server
    flask run --debug
elif [ "${MODE@L}" = "dev-client" ]; then # Added so that the client can be editted in real time
    echo "Setting up the client and server in development mode (bugs for the client will be shown with bugs for the server)"

    # Start the server first
    cd $DOCKER_APP_PATH/server
    flask run --debug &
    FLASK_SERVER_PID=$!

    # Kills the Flask server after the script exits
    trap "pkill -P $$" EXIT

    # Start client second
    cd $DOCKER_APP_PATH/client
    # Vite is used to very quickly rebuild the client when changes are made
    # Error messages will be shown to user
    npx vite --port 8002 --host "0.0.0.0" --cors true
elif [ "${MODE@L}" = "prod" ]; then # TODO: Integrate CJs run_prod.sh file into this portion of the script
    # Build the client
    cd $DOCKER_APP_PATH/client
    npx vue-tsc --build --force && npx vite build

    # Start the server
    echo "Starting the server"
    cd $DOCKER_APP_PATH/server
    flask run
fi